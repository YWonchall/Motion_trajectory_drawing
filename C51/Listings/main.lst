C51 COMPILER V9.59.0.0   MAIN                                                              02/05/2020 15:20:06 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <stc8.h>
   2          #include <math.h>
   3          #define time 0.05
   4          int i,j;
   5          float b = 10.151;
   6          float c = 5.00;
   7          unsigned char testNum[3][5] = {
   8          {0x51,1,1,1,1},{0x52,2,2,2,2},{0x53,3,3,3,3}
   9          };
  10          unsigned char str[32]= {0};
  11          unsigned char *ptrTxd;
  12          unsigned char cntTxd = 0;
  13          unsigned char Re_buf[11];
  14          unsigned char counter=0;
  15          unsigned char ucStra[6];
  16          float aBefore[3] = {0.0, 0.0, 0.0};
  17          float aAfter[3] = {0.0, 0.0, 0.0};
  18          float v[3] = {0.0, 0.0, 0.0};
  19          float s[3] = {0.0, 0.0, 0.0};
  20          int m =5000;
  21          void configUART1();
  22          void configUART2();
  23          void Timer0Init(void);
  24          void sendData(float* dat);
  25          void main()
  26          {
  27   1        EA = 1;
  28   1        ES = 1;
  29   1        ET0 = 1;
  30   1        IE2 = 0x01;
  31   1        configUART1();
  32   1        configUART2();
  33   1        Timer0Init();
  34   1        while(1)
  35   1        { 
  36   2          aAfter[0] = ((short)(ucStra[1]<<8| ucStra[0]))/32768.0*16.0;
  37   2          aAfter[1] = ((short)(ucStra[3]<<8| ucStra[2]))/32768.0*16.0+0.25;
  38   2          aAfter[2] = ((short)(ucStra[5]<<8| ucStra[4]))/32768.0*16.0-0.55;
  39   2          for(i=0;i<3;i++)
  40   2          {   
  41   3            if(fabs(aAfter[i])<0.1)
  42   3              aAfter[i] = 0.0;
  43   3          }
  44   2          
  45   2          for(j=0;j<3;j++)
  46   2          {
  47   3            for(i=0;i<4;i++)
  48   3            {
  49   4              testNum[j][i+1] = ((unsigned char*)&s[j])[i];;
  50   4            }
  51   3            ptrTxd = testNum[j];
  52   3            cntTxd = sizeof(testNum[j]);
  53   3            TI = 1;
  54   3            while(cntTxd!=0);
C51 COMPILER V9.59.0.0   MAIN                                                              02/05/2020 15:20:06 PAGE 2   

  55   3            while(m--);
  56   3            m=5000;
  57   3          }
  58   2        }
  59   1      }
  60          
  61          
  62          void configUART1()
  63          {
  64   1        SCON = 0x50;    //8位数据,可变波特率
  65   1        AUXR &= 0xBF;   //定时器1时钟为Fosc/12,即12T
  66   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  67   1        TMOD &= 0x0F;   //设定定时器1为16位自动重装方式
  68   1        TL1 = 0xE8;   //设定定时初值
  69   1        TH1 = 0xFF;   //设定定时初值
  70   1        ET1 = 0;    //禁止定时器1中断
  71   1        TR1 = 1;    //启动定时器1
  72   1      }
  73          
  74          void configUART2()
  75          {
  76   1        S2CON = 0x50;   //8位数据,可变波特率
  77   1        AUXR &= 0xFB;   //定时器2时钟为Fosc/12,即12T
  78   1        T2L = 0xE8;   //设定定时初值
  79   1        T2H = 0xFF;   //设定定时初值
  80   1        AUXR |= 0x10;   //启动定时器2
  81   1      }
  82          
  83          void Timer0Init(void)   //50毫秒@11.0592MHz
  84          {
  85   1        AUXR &= 0x7F;   //定时器时钟12T模式
  86   1        TMOD &= 0xF0;   //设置定时器模式
  87   1        TL0 = 0x00;   //设置定时初值
  88   1        TH0 = 0x4C;   //设置定时初值
  89   1        TF0 = 0;    //清除TF0标志
  90   1        TR0 = 1;    //定时器0开始计时
  91   1      }
  92          
  93          void interruptTimer0() interrupt 1
  94          {
  95   1        TF0 = 0;  
  96   1        for(i=0;i<3;i++)
  97   1        {
  98   2          s[i] = s[i] + v[i]*time + 0.25*(aAfter[i]+aBefore[i])*time;
  99   2          v[i] = v[i] + (aBefore[i]+aAfter[i])*0.5*time;
 100   2          aBefore[i] = aAfter[i];
 101   2        }
 102   1        
 103   1      }
 104          
 105          void interruptUART1() interrupt 4
 106          {
 107   1        if(RI)
 108   1        {
 109   2          RI = 0;
 110   2          SBUF = SBUF;
 111   2        }
 112   1        if(TI)
 113   1        {
 114   2          TI = 0;
 115   2          
 116   2          if(cntTxd > 0)
C51 COMPILER V9.59.0.0   MAIN                                                              02/05/2020 15:20:06 PAGE 3   

 117   2          {
 118   3            SBUF = *ptrTxd;
 119   3            cntTxd--;
 120   3            ptrTxd++;
 121   3          }
 122   2          
 123   2        }
 124   1      }
 125          
 126          void interruptUART2() interrupt 8
 127          {
 128   1        if(S2CON&0x02)
 129   1        {
 130   2          S2CON &= ~0x02;
 131   2        }
 132   1        if(S2CON&0x01)
 133   1        {
 134   2          S2CON&=~0x01;
 135   2          Re_buf[counter] = S2BUF;
 136   2          if(counter==0&&Re_buf[0]!=0x55) return;      //第0号数据不是帧头          
 137   2          counter++; 
 138   2          if(counter==11)             //接收到11个数据
 139   2          {    
 140   3            counter=0;//重新赋值，准备下一帧数据的接收        
 141   3            if(Re_buf [1] == 0x51)
 142   3            {
 143   4              ucStra[0]=Re_buf[2];
 144   4              ucStra[1]=Re_buf[3];
 145   4              ucStra[2]=Re_buf[4];
 146   4              ucStra[3]=Re_buf[5];
 147   4              ucStra[4]=Re_buf[6];
 148   4              ucStra[5]=Re_buf[7];
 149   4            } 
 150   3          }
 151   2        }
 152   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1053    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =    131    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
